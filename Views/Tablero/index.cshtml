@{
    ViewData["Title"] = "Tableros";
}

@using Tp11.ViewModels
@model List<TableroViewModel> //Especifico q la view espera un obj de ese tipo, q podre usar con Model o con su nombre original

<h2>Tablero List</h2>

<table class="table table-dark">
    <thead>
        <tr>
            <th hidden>ID</th>
            <th hidden>IdUsuarioPropietario</th>
            <th>Nombre</th>
            <th>Descripcion</th>
            <th >Propietario</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{int idUsuarioLogueado = Convert.ToInt32(ViewContext.HttpContext.Session.GetString("Id"));} 
        @foreach (var tablero in Model) // puedo usar tableros o Model
        {
            <tr>
                <td hidden>@tablero.Id</td>
                <td hidden>@tablero.IdUsuarioPropietario</td>
                <td>@tablero.Nombre</td>
                <td>@tablero.Descripcion</td>
                @if(idUsuarioLogueado == tablero.IdUsuarioPropietario){
                    <td>Si</td>
                    <td>
                        <a asp-controller="Tablero" asp-action="EditarTablero" asp-route-idTablero="@tablero.Id">Editar</a>
                        <a asp-controller="Tablero" asp-action="DeleteTablero" asp-route-idTablero="@tablero.Id" onclick="return confirm('Â¿Estas seguro que quieres eliminar el elemento?')">Eliminar</a>                      
                    </td>
                } else {
                    <td>No</td>
                    <td></td>
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <a asp-controller="Tablero" asp-action="AgregarTablero">Agregar Tablero</a>
        </tr>
    </tfoot>
</table>

@section Scripts { <partial name="_ValidationScriptsPartial" /> }